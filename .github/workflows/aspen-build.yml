name: Build and Deploy Aspen

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'   # e.g., v1.2.3

jobs:
  build:
    runs-on: self-hosted  # Use your self-hosted runner

    env:
      DOCKER_IMAGE: yourdockerhubuser/aspen  # Replace with your Docker Hub repo
      WAR_NAME: aspen.war

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build project (includes test)
        run: ./gradlew clean build

      - name: Run tests
        run: ./gradlew test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/

      - name: Prepare WAR output
        run: |
          mkdir -p build-output
          cp runtime/build/libs/*.war build-output/${{ env.WAR_NAME }}

      - name: Upload WAR file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Aspen-WAR
          path: build-output/${{ env.WAR_NAME }}

      - name: Copy WAR to internal server via SCP
        run: |
          scp build-output/${{ env.WAR_NAME }} ssi@172.16.1.2:/sssifs/aspen/releases/
        env:
          SSH_AUTH_SOCK: /tmp/ssh_auth_sock  # Ensure SSH agent forwarding is configured if needed

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}
